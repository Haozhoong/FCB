# Data
data_type: brain                   # data type: brain knee
mask_type: cartesiancs             # mask: poisson, cartesian, radial
sampling_factor: 8                # UnderSampling factor
n_coils: 8                       # Coils Number
add_noise: False                  # Add extra Guassian Noise or not
noise_level: 0.2                  # Noisel level
img_size: 320                     # size of training images
label_index_train:                # Samples for training
    - 0
    - 5017     
label_index_val:                  # Samples for validation
    - 0
    - 524

---
# Model
model_name: FVarNet             # model: UNet, FUNet, MoDL, FMoDL, SwinMR
num_cascades: 12
chans: 18
sens_chans: 8
mask_center: True
num_low_frequencies: 48
fcb_l: 2                      # Number of layer which FCB begins to be used
fcb_forward: True             # True: using FCB layers from the front; False: Symmetrically

---
# Training parameters
optimizer: Adam           # optimizer: RMSprop, Adam
LR: 1e-3
weight_decay: 1e-7
momentum: 0.9
loss: L1                     # loss function: L1, MSE
epoches: 80                 # total training epoches
batch_size: 8                # barch size
LR_repara: 1e-3
weight_decay_repara: 0
repara: True


---
# Save and load
save_dir: './export'
save_sub_dir: ''
save_label: ''
resume_training: False

# other
device: cuda
vis_interval: 50             # print loss for every ? step